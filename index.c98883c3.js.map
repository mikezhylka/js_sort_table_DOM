{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAU,EAAG,SAAS,gBAAgB,CAAC,gBAEvC,EAAY,CAAM,CAAC,EAAE,CACrB,EAAgB,CAAM,CAAC,EAAE,CACzB,EAAW,CAAM,CAAC,EAAE,CACpB,EAAc,CAAM,CAAC,EAAE,CAGvB,EAAc,SAAU,CAAI,CAAE,CAAK,EACvC,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,MAAM,CAAC,E,EACrC,EAGM,EAAiB,SAAU,CAAI,CAAE,CAAS,EAC9C,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAU,CAAC,SAAS,CAAC,WAAW,GAChD,EAAQ,EAAE,KAAK,CAAC,EAAU,CAAC,SAAS,CAAC,WAAW,GAEtD,OAAO,EAAM,aAAa,CAAC,EAC7B,EACF,EAGA,EAAU,gBAAgB,CAAC,QAAS,WAClC,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAa,EAAG,SAAS,gBAAgB,CAAC,aAEhD,EAAe,EAAW,GAC1B,EAAY,EAAW,EACzB,GAGA,EAAc,gBAAgB,CAAC,QAAS,WACtC,IAAM,EAAa,EAAG,SAAS,gBAAgB,CAAC,aAC1C,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAe,EAAW,GAC1B,EAAY,EAAW,EACzB,GAGA,EAAS,gBAAgB,CAAC,QAAS,WACjC,IAAM,EAAa,EAAG,SAAS,gBAAgB,CAAC,aAC1C,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EACE,OAAO,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,EAAI,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CACvE,GAEA,EAAY,EAAW,EACzB,GAGA,EAAY,gBAAgB,CAAC,QAAS,WACpC,IAAM,EAAa,EAAG,SAAS,gBAAgB,CAAC,aAC1C,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EAQE,OAAO,AAPS,SACd,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,KAErC,SACd,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,IAIvD,GAEA,EAAY,EAAW,EACzB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar titles = _to_consumable_array(document.querySelectorAll(\"thead tr th\"));\nvar nameTitle = titles[0];\nvar positionTitle = titles[1];\nvar ageTitle = titles[2];\nvar salaryTitle = titles[3];\n// append sorted elems inside a table\nvar updateTable = function updateTable(rows, table) {\n    table.innerHTML = \"\";\n    rows.forEach(function(row) {\n        return table.append(row);\n    });\n};\n// sort rows by alphabet in ASC order\nvar sortByAlphabet = function sortByAlphabet(rows, cellIndex) {\n    rows.sort(function(a, b) {\n        var wordA = a.cells[cellIndex].innerText.toLowerCase();\n        var wordB = b.cells[cellIndex].innerText.toLowerCase();\n        return wordA.localeCompare(wordB);\n    });\n};\n// name column\nnameTitle.addEventListener(\"click\", function() {\n    var tbody = document.querySelector(\"tbody\");\n    var tableRows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    sortByAlphabet(tableRows, 0);\n    updateTable(tableRows, tbody);\n});\n// position column\npositionTitle.addEventListener(\"click\", function() {\n    var tableRows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    var tbody = document.querySelector(\"tbody\");\n    sortByAlphabet(tableRows, 1);\n    updateTable(tableRows, tbody);\n});\n// age column\nageTitle.addEventListener(\"click\", function() {\n    var tableRows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    var tbody = document.querySelector(\"tbody\");\n    tableRows.sort(function(a, b) {\n        return parseInt(a.cells[2].innerText) - parseInt(b.cells[2].innerText);\n    });\n    updateTable(tableRows, tbody);\n});\n// salary column\nsalaryTitle.addEventListener(\"click\", function() {\n    var tableRows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    var tbody = document.querySelector(\"tbody\");\n    tableRows.sort(function(a, b) {\n        var salaryA = parseInt(a.cells[3].innerText.replace(\"$\", \"\").replace(\",\", \"\"));\n        var salaryB = parseInt(b.cells[3].innerText.replace(\"$\", \"\").replace(\",\", \"\"));\n        return salaryA - salaryB;\n    });\n    updateTable(tableRows, tbody);\n});\n\n//# sourceMappingURL=index.c98883c3.js.map\n","'use strict';\n\nconst titles = [...document.querySelectorAll('thead tr th')];\n\nconst nameTitle = titles[0];\nconst positionTitle = titles[1];\nconst ageTitle = titles[2];\nconst salaryTitle = titles[3];\n\n// append sorted elems inside a table\nconst updateTable = function (rows, table) {\n  table.innerHTML = '';\n  rows.forEach((row) => table.append(row));\n};\n\n// sort rows by alphabet in ASC order\nconst sortByAlphabet = function (rows, cellIndex) {\n  rows.sort((a, b) => {\n    const wordA = a.cells[cellIndex].innerText.toLowerCase();\n    const wordB = b.cells[cellIndex].innerText.toLowerCase();\n\n    return wordA.localeCompare(wordB);\n  });\n};\n\n// name column\nnameTitle.addEventListener('click', () => {\n  const tbody = document.querySelector('tbody');\n  const tableRows = [...document.querySelectorAll('tbody tr')];\n\n  sortByAlphabet(tableRows, 0);\n  updateTable(tableRows, tbody);\n});\n\n// position column\npositionTitle.addEventListener('click', () => {\n  const tableRows = [...document.querySelectorAll('tbody tr')];\n  const tbody = document.querySelector('tbody');\n\n  sortByAlphabet(tableRows, 1);\n  updateTable(tableRows, tbody);\n});\n\n// age column\nageTitle.addEventListener('click', () => {\n  const tableRows = [...document.querySelectorAll('tbody tr')];\n  const tbody = document.querySelector('tbody');\n\n  tableRows.sort((a, b) => {\n    return parseInt(a.cells[2].innerText) - parseInt(b.cells[2].innerText);\n  });\n\n  updateTable(tableRows, tbody);\n});\n\n// salary column\nsalaryTitle.addEventListener('click', () => {\n  const tableRows = [...document.querySelectorAll('tbody tr')];\n  const tbody = document.querySelector('tbody');\n\n  tableRows.sort((a, b) => {\n    const salaryA = parseInt(\n      a.cells[3].innerText.replace('$', '').replace(',', ''),\n    );\n    const salaryB = parseInt(\n      b.cells[3].innerText.replace('$', '').replace(',', ''),\n    );\n\n    return salaryA - salaryB;\n  });\n\n  updateTable(tableRows, tbody);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","titles","document","querySelectorAll","nameTitle","positionTitle","ageTitle","salaryTitle","updateTable","rows","table","innerHTML","forEach","row","append","sortByAlphabet","cellIndex","sort","a","b","wordA","cells","innerText","toLowerCase","wordB","localeCompare","addEventListener","tbody","querySelector","tableRows","parseInt","salaryA","replace"],"version":3,"file":"index.c98883c3.js.map"}